services:
  mongo:
    image: mongo
    container_name: mongo
    volumes:
      - ./data/mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    networks:
      - data_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express:1.0.0-18-alpine3.18
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongo"
      ME_CONFIG_MONGODB_PORT: "27017"
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_ADMINUSERNAME: "root"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "root"
      ME_CONFIG_BASICAUTH_USERNAME: "root"
      ME_CONFIG_BASICAUTH_PASSWORD: "root"
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - "8081:8081"
    networks:
      - data_network
  fastapi:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: fastapi
    volumes:
      - ./api:/app
      - ./model:/app/model
      - ./data:/app/data
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      HOST: "0.0.0.0"
      PORT: "8000"
    ports:
      - 8000:8000
    networks:
      - data_network
  streamlit:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: streamlit
    volumes:
      - ./app:/app
    ports:
      - 8501:8501
    depends_on:
      - fastapi
    environment:
      API_URL: http://fastapi:8000/
      ADDRESS: "0.0.0.0"
      PORT: "8501"
    networks:
      - data_network

networks:
  data_network:
    driver: bridge