name: Deploy to EC2

on:
  push:
    branches:
      - main  # Trigger deployment when pushing to main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Launch EC2 Instance
        id: ec2
        run: |
          INSTANCE_ID=$(aws ec2 run-instances --image-id ami-085ad6ae776d8f09c --count 1 --instance-type t2.2xlarge --key-name ${{ secrets.EC2_KEY_NAME }} --security-groups ${{ secrets.EC2_SECURITY_GROUP }} --query 'Instances[0].InstanceId' --output text)

          echo "EC2 instance $INSTANCE_ID created"
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

      - name: Get EC2 Public IP
        run: |
          PUBLIC_IP=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_ID \
            --query 'Reservations[0].Instances[0].PublicIpAddress' \
            --output text)
          
          echo "Public IP: $PUBLIC_IP"
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

      - name: Wait for EC2 to be Ready
        run: sleep 300  # Wait for EC2 instance to be initialized

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # Ensure the known_hosts file is updated correctly
          ssh-keyscan -H $PUBLIC_IP >> ~/.ssh/known_hosts || echo "SSH keyscan failed"
          echo "StrictHostKeyChecking no" >> ~/.ssh/config  # Disable host checking

      - name: Copy files to EC2
        run: |
          scp -r * ec2-user@$PUBLIC_IP:/home/ec2-user/src

      - name: Install Docker compose
        run: |
          ssh ec2-user@$PUBLIC_IP << 'EOF'
          sudo apt update -y
          sudo apt install -y docker.io docker-compose
          sudo systemctl start docker
          sudo systemctl enable docker      

      - name: Deploy with Docker Compose
        run: |
          ssh ec2-user@$PUBLIC_IP << 'EOF'
          cd /home/ec2-user/src
          docker-compose down
          docker-compose pull
          docker-compose up -d --build

      - name: Output Deployment Info
        run: echo "App deployed on EC2 at http://$PUBLIC_IP:8501"
